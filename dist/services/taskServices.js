const supabase=require("../config/database"),{getAllTaskUser:getAllTaskUser,deleteTask:deleteTask,createTask:createTask,getTasksByStatus:getTasksByStatus,updateTaskStatus:updateTaskStatus}=require("../controllers/taskController");module.exports={create:async(s,e)=>{const{user_id_task:t,title_task:a,description_task:r,prioridade:u,data_final:o,status_task:c}=s,{data:n,error:i}=await supabase.from("tasks_users").insert([{user_id_task:t,title_task:a,description_task:r,prioridade:u,data_final:o,status_task:c}]);return i?e(i):e(null,n)},deleteTask:async(s,e)=>{try{const{id_user:t,id_task:a}=s,{data:r,error:u}=await supabase.from("tasks_users").delete().eq("user_id_task",t).eq("id",a);if(u)throw u;return r&&0!==r.length?e(null,{success:1,message:"Task deleted successfully",data:r}):e(null,{success:1,message:"Task deleted successfully"})}catch(s){return console.error("Error deleting task:",s.message),e({success:0,message:"Internal Server Error",error:s.message})}},getAllTaskUser:async(s,e)=>{try{const{data:t,error:a}=await supabase.from("tasks_users").select("id, title_task, description_task, prioridade, data_final, status_task").eq("user_id_task",s);if(a)throw a;return t&&0!==t.length?e(null,{success:1,data:t}):e({success:0,message:"No tasks found for this user"})}catch(s){return console.error("Error fetching tasks:",s.message),e({success:0,message:"Internal Server Error",error:s.message})}},getTasksByStatus:async(s,e,t)=>{try{const{data:a,error:r}=await supabase.from("tasks_users").select("id, title_task, description_task, prioridade, data_final, status_task").eq("user_id_task",s).eq("status_task",e);if(r)throw r;return a&&0!==a.length?t(null,{success:1,data:a}):t({success:0,message:`No tasks found for this user with status: ${e}`})}catch(s){return console.error("Error fetching tasks by status:",s.message),t({success:0,message:"Internal Server Error",error:s.message})}},updateTaskStatus:async(s,e)=>{try{const{id_user:t,id_task:a,new_status:r}=s,{error:u}=await supabase.from("tasks_users").update({status_task:r}).eq("user_id_task",t).eq("id",a);if(u)throw u;return e(null,{success:1,message:"Status updated successfully"})}catch(s){return console.error("Error updating task status:",s.message),e({success:0,message:"Internal Server Error",error:s.message})}}};